name: main

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build_publish:
    name: Build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Prep to publish
        run: npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run build
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn flow
          yarn test

      - name: Beta release
        if: github.event_name == 'pull_request'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 2
          max_attempts: 3
          command: |
            export GIT_TAG=$(make version)-beta
            export NPM_TAG=beta
            git config --global user.email "revenue-guardians@meetup.com"
            git config --global user.name "meetcvs"
            npm version $GIT_TAG -m "Version $GIT_TAG built by Github action"
            yarn run npm-release
        env:
          CI_BUILD_NUMBER: ${{ github.run_number }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Stable release
        if: github.ref == 'refs/heads/main'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 2
          max_attempts: 3
          command: |
            export GIT_TAG=$(make version)
            export NPM_TAG=latest
            git config --global user.email "revenue-guardians@meetup.com"
            git config --global user.name "meetcvs"
            npm version $GIT_TAG -m "Version $GIT_TAG built by Github action"
            yarn run npm-release
        env:
          CI_BUILD_NUMBER: ${{ github.run_number }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
